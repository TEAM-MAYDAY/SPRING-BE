name: Java CI with Gradle

on:
  push:
    branches:
      - main

env:
  DOCKER_REGISTRY_URL: ${{ secrets.DOCKER_REGISTRY_URL }}
  DOCKER_IMAGE_NAME: spring-mayday
  DOCKER_CONTAINER_NAME: spring-mayday
  SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
  SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
  SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
  CATEGORY_FILTER_URL: ${{ secrets.CATEGORY_FILTER_URL }}
  DESCRIPTION_DETAIL_FILTER_URL: ${{ secrets.DESCRIPTION_DETAIL_FILTER_URL }}
  SPRING_PROFILES_ACTIVE: default

jobs:
  build-and-push-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Caching Gradle dependencies to speed up the build process
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Setting up JDK 21 for building the Java application
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # Ensuring the Gradle wrapper script is executable
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Building the application with Gradle, excluding tests
      - name: Build with Gradle
        env:
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          CATEGORY_FILTER_URL: ${{ secrets.CATEGORY_FILTER_URL }}
          DESCRIPTION_DETAIL_FILTER_URL: ${{ secrets.DESCRIPTION_DETAIL_FILTER_URL }}
          SPRING_PROFILES_ACTIVE: default
        run: ./gradlew clean build -x test

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Login to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.SAM9812_DOCKERHUB_USERNAME }}
          password: ${{ secrets.SAM9812_DOCKERHUB_PASSWORD }}

      # Building and pushing Docker image to DockerHub
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: sam9812/mayday:latest
          # GitHub Action Cache
          cache-from: type=gha
          cache-to: type=gha,mode=max


